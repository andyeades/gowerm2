//
//  Utilities
//

// Remove the unit of a length
// @param {Number} $number - Number to remove unit from
// @return {Number} - Unitless number

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

//
//  Convert values to unit specified in typography variables
//

@function lib-font-size-value($-value) {
    @if $font-size-unit-convert {
        @if $-value != false and $-value != '' {
            $-value: strip-unit($-value) / $font-size-unit-ratio;
            @if $-value > 0 {
                $-value: $-value * 1#{$font-size-unit};
            }
            @return $-value;
        }
    }
    @else {
        @return $-value;
    }
}

@mixin lib-visibility-hidden() {
    height: 0;
    visibility: hidden;
}

@mixin lib-visually-hidden() {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@mixin lib-visually-hidden-reset() {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

//
//  Clearfix
//

@mixin lib-clearfix() {
    &:before,
    &:after {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin lib-clearer() {
    &:after {
        clear: both;
        content: '';
        display: table;
    }
}

//
//  Gradient
//

@mixin lib-gradient-horizontal(
    $-start-color,
    $-end-color,
    $-start-percent             : 0%,
    $-end-percent               : 100%,
    $-background-color-position : true
) {
    @if $-background-color-position == true {
        background-color: $-end-color;
        background-repeat: repeat-x;
        background-image: linear-gradient(to right, $-start-color $-start-percent, $-end-color $-end-percent);
    }
    @else if $-background-color-position == false {
        background-color: $-start-color;
        background-image: linear-gradient(to right, $-start-color $-start-percent, $-end-color $-end-percent);
        background-repeat: repeat-x;
    }
}
@mixin lib-gradient-vertical(
    $-start-color,
    $-end-color,
    $-start-percent             : 0%,
    $-end-percent               : 100%,
    $-background-color-position : true
) {
    @if $-background-color-position == true {
        background-color: $-end-color;
        background-image: linear-gradient(to bottom, $-start-color $-start-percent, $-end-color $-end-percent);
        background-repeat: repeat-x;
    }
    @else if $-background-color-position == false {
        background-color: $-start-color;
        background-image: linear-gradient(to bottom, $-start-color $-start-percent, $-end-color $-end-percent);
        background-repeat: repeat-x;
    }
}

//
//  Custom background gradient
//

@mixin lib-background-gradient(
    $-background-gradient-color-start,
    $-background-gradient-color-end,
    $-background-gradient-direction,
    $-background-gradient,
    $-background-gradient-color-position : true
) {
    @if $-background-gradient-direction == horizontal and $-background-gradient == true {
        @include lib-gradient-horizontal(
            $-start-color               : $-background-gradient-color-start,
            $-end-color                 : $-background-gradient-color-end,
            $-background-color-position : $-background-gradient-color-position
        );
    }
    @if $-background-gradient-direction == vertical and $-background-gradient == true {
        @include lib-gradient-vertical(
            $-start-color               : $-background-gradient-color-start,
            $-end-color                 : $-background-gradient-color-end,
            $-background-color-position : $-background-gradient-color-position
        );
    }
}


//
//  Rotate
//

@mixin lib-rotate($-rotation) {
    transform: rotate($-rotation);
}


//
//  Remove spaces between elements with display: inline-block
//

@mixin lib-inline-block-space-container() {
    font-size: 0;
    letter-spacing: -1px;
    line-height: 0;
}

@mixin lib-inline-block-space-item(
    $-font-size   : $font-size-base,
    $-line-height : normal
) {
    @include lib-font-size($-font-size);
  @include co(font-size, $-font-size);
    letter-spacing: normal;
    line-height: $-line-height;
}

//
//  Add any css property
//

@mixin lib-css(
    $-property,
    $-value,
    $-prefix: 0
) {
    @if $-value == 0 {
        $-value: strip-unit($-value);
    }

    @if $-value != '' and $-value != false {
        @if type-of($-value) == list {
            $-isFalse: false;
            @each $-item in $-value {
                @if $-item == false {
                    $-isFalse: true;
                }
            }
            @if $-isFalse == false {
                #{$-property}: $-value;
            }
        }
        @else {
            #{$-property}: $-value;
        }
    }
}

//
//  Add url to property
//

// usage:
// .column.left {
//     .lib-url('images/fallback.png');
//     background:url("#{$url}") repeat-y;
// }
// .columns {
//     .lib-url('images/fallback.png', 'Magento_Catalog');
//     background:url("#{$url}") repeat;
// }

$urls-resolved: false;

@mixin lib-url($-path) {
    $url: "../#{$-path}";
}

@mixin lib-url($-path, $-module) {
    @if $-module != false and $-module != '' {
        @if $urls-resolved == true {
            $url: "../#{$-module}/#{$-path}";
        }
        @else if $urls-resolved == false {
            $url: "#{$-module}::#{$-path}";
        }
    }
}

//
//  Arrow
//

@mixin lib-arrow($-position, $-size, $-color) {
    border: $-size solid transparent;
    height: 0;
    width: 0;
    @include _lib-abbor_el($-position, $-color);
}

@mixin _lib-abbor_el($-position, $-color) {
    @if $-position == left {
        @include lib-css(border-right-color, $-color);
    }
    @if $-position == right {
        @include lib-css(border-left-color, $-color);
    }
    @if $-position == up {
        @include lib-css(border-bottom-color, $-color);
    }
    @if $-position == down {
        @include lib-css(border-top-color, $-color);
    }
}

//
//  Input placeholder
//

@mixin lib-input-placeholder(
    $-input-placeholder-color: $form-element-input-placeholder-color,
    $-input-placeholder-font-weight: $form-element-input-font-weight
) {
    &::-webkit-input-placeholder {
        @include lib-css(color, $-input-placeholder-color);
        @include lib-css(font-weight, $-input-placeholder-font-weight);
    }

    &:-moz-placeholder {
        @include lib-css(color, $-input-placeholder-color);
        @include lib-css(font-weight, $-input-placeholder-font-weight);
    }

    &::-moz-placeholder {
        @include lib-css(color, $-input-placeholder-color);
        @include lib-css(font-weight, $-input-placeholder-font-weight);
    }

    &:-ms-input-placeholder {
        @include lib-css(color, $-input-placeholder-color);
        @include lib-css(font-weight, $-input-placeholder-font-weight);
    }
}

//
//  Flex layout
//

@mixin lib-vendor-prefix-display(
    $-value: flex
) {
    display: $-value;
}

@mixin lib-vendor-prefix-flex-grow(
    $-value: 0
) {
    flex-grow: $-value;
}

@mixin lib-vendor-prefix-flex-shrink(
    $-value: 1
) {
    flex-shrink: $-value;
}

@mixin lib-vendor-prefix-flex-basis(
    $-value: auto
) {
    flex-basis: $-value;
}

@mixin lib-vendor-prefix-flex-wrap(
    $-value: wrap
) {
    flex-wrap: $-value;
}

@mixin lib-vendor-prefix-flex-direction(
    $-value: column
) {
    flex-direction: $-value;
}

@mixin lib-vendor-prefix-order(
    $-value: 0
) {
    order: $-value;
}

@mixin lib-vendor-box-align(
    $-value: stretch
) {
    @include co(align-items, $-value);
}

@mixin lib-vendor-prefix-appearance(
    $value: none
) {
    appearance: $value;
}

@mixin lib-vendor-prefix-column-count(
    $-value
) {
    column-count: $-value;
}

//
//  Pointer for popups or dropdowns
//

@mixin lib-pointer(
    $-size                        : 6px,
    $-background-color            : $color-white,
    $-border-color                : $color-gray-light3,
    $-position-vertical          : top,
    $-position-horizontal        : left,
    $-position-vertical-value   : -12px,
    $-position-horizontal-value : $indent-s,
    $-z-index                     : 99
) {
    &:before,
    &:after {
        content: '';
        position: absolute;
        display: block;
        width: 0;
        height: 0;
        border-bottom-style: solid;
    }

    &:before {
        @include lib-css($-position-horizontal, $-position-horizontal-value);
        @include lib-css($-position-vertical, $-position-vertical-value);
        @include lib-css(border, solid $-size - 1);
        @include lib-css(border-color, transparent transparent $-background-color transparent);
        @include lib-css(z-index, $-z-index);
    }

    &:after {
        @include lib-css($-position-horizontal, $-position-horizontal-value - 1);
        @include lib-css($-position-vertical, $-position-vertical-value - 2);
        @include lib-css(border, solid $-size);
        @include lib-css(border-color, transparent transparent $-border-color transparent);
        @include lib-css(z-index, $-z-index - 1);
    }
}
