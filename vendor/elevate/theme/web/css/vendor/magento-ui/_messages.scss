//
//  Messages
//

// Helper function to easier get values related to specific type
@function message($-message-type, $-key) {
    $-map: $message-info-map;

    // find maps adequate to message type
    @if $-message-type == error {
        $-map: $message-error-map;
    }

    @if $-message-type == success {
        $-map: $message-success-map;
    }

    @if $-message-type == warning {
        $-map: $message-warning-map;
    }

    @if $-message-type == notice {
        $-map: $message-notice-map;
    }

    @return map-get($-map, $-key);
}

@mixin lib-message(
    $-message-type: info
) {
    @include _lib-message();
    @include _lib-message-style(
        $-message-color            : message($-message-type, color),
        $-message-background       : message($-message-type, background),
        $-message-link-color       : message($-message-type, link-color),
        $-message-link-color-hover : message($-message-type, link-color-hover),
        $-message-link-color-active: message($-message-type, link-color-active),
        $-message-border-color     : message($-message-type, border-color)
    );
}

@mixin elevate-lib-message(
    $-message-type: info
) {
    @include _elevate-lib-message();
    @include _lib-message-style(
        $-message-color            : message($-message-type, color),
        $-message-background       : message($-message-type, background),
        $-message-link-color       : message($-message-type, link-color),
        $-message-link-color-hover : message($-message-type, link-color-hover),
        $-message-link-color-active: message($-message-type, link-color-active),
        $-message-border-color     : message($-message-type, border-color)
    );
}

@mixin _lib-message(
    $-message-padding: $message-padding,
    $-message-margin: $message-margin,
    $-message-border-radius: $message-border-radius
) {
    @include lib-css(border-radius, $-message-border-radius);
    @include lib-css(margin, $-message-margin);
    @include lib-css(padding, $-message-padding);
    display: block;
    @include lib-typography(
        $-color       : $message-color,
        $-font-size   : $message-font-size,
        $-font-family : $message-font-family,
        $-font-weight : $message-font-weight,
        $-font-style  : $message-font-style,
        $-line-height : $message-line-height
    );
    @include _lib-message-border($message-border-width, $message-border-style);
}

@mixin _elevate-lib-message(
    $-message-padding: $elevate-message-padding,
    $-message-margin: $message-margin,
    $-message-border-radius: $message-border-radius
) {
    @include lib-css(border-radius, $-message-border-radius);
    @include lib-css(margin, $-message-margin);
    @include lib-css(padding, $-message-padding);

    display: flex;
    align-items: center;
    > div {
        display: flex;
        align-items: center;
    }
    @include lib-typography(
        $-color       : $message-color,
        $-font-size   : $message-font-size,
        $-font-family : $message-font-family,
        $-font-weight : $message-font-weight,
        $-font-style  : $message-font-style,
        $-line-height : $message-line-height
    );
    @include _lib-message-border($message-border-width, $message-border-style);
}

@mixin _lib-message-style(
    $-message-background: $message-info-background,
    $-message-color: $message-info-color,
    $-message-link-color: $message-info-link-color,
    $-message-link-color-hover: $message-info-link-color-hover,
    $-message-link-color-active: $message-info-link-color-active,
    $-message-border-color: $message-info-border-color
) {
    @include lib-css(background, $-message-background);
    @include lib-css(border-color, $-message-border-color);
    @include lib-css(color, $-message-color);

    a {
        @include lib-css(color, $-message-link-color);

        &:hover {
            @include lib-css(color, $-message-link-color-hover);
        }

        &:active {
            @include lib-css(color, $-message-link-color-active);
        }
    }
}

@mixin _lib-message-border(
    $-message-border-width: $message-border-width,
    $-message-border-style: $message-border-style
) {
    @if $-message-border-width != 0 and $-message-border-width != inherit and $-message-border-style != inherit {
        @include lib-css(border, $-message-border-width $-message-border-style);
    }
}

//  Messages with lateral icon
@mixin lib-message-icon-lateral(
    $-message-type: info,
    $-message-position: right
) {
    @include lib-message($-message-type);
    @include _lib-message-icon-lateral(
        $-message-position,
        message($-message-type, icon),
        message($-message-type, icon-color-lateral),
        message($-message-type, icon-background),
        message($-message-type, icon-top),
        message($-message-type, icon-right),
        message($-message-type, icon-bottom),
        message($-message-type, icon-left)
    );
}

//  Messages with inner icon
@mixin lib-message-icon-inner($-message-type: info) {
    @include lib-message($-message-type);
    @include _lib-message-icon-inner(
        message($-message-type, icon),
        message($-message-type, icon-color-inner),
        message($-message-type, icon-background),
        message($-message-type, icon-top),
        message($-message-type, icon-left),
        message($-message-type, icon-bottom),
        message($-message-type, icon-right)
    );
}

//  Messages with inner icon
@mixin elevate-lib-message-icon-inner($-message-type: info) {
    @include elevate-lib-message($-message-type);
    @include _elevate-lib-message-icon-inner(
            message($-message-type, icon),
            message($-message-type, icon-color-inner),
            message($-message-type, icon-background),
    );
}

//  Private mixins
@mixin _lib-message-icon-lateral(
    $-message-icon-position,
    $-message-icon,
    $-message-icon-color,
    $-message-icon-background,
    $-message-icon-top,
    $-message-icon-left,
    $-message-icon-bottom,
    $-message-icon-right
) {
    position: relative;

    &:before {
        @include lib-css(background, $-message-icon-background);
        @include lib-css(width, $message-icon-lateral-width);
        content: '';
        display: block;
        height: 100%;
        padding: 0;
        position: absolute;
        text-align: center;
        top: 0;
    }

    & > *:first-child {
        &:before {
            @include lib-css(margin-top, -$message-icon-lateral-arrow-size);
            content: '';
            overflow: hidden;
            position: absolute;
            top: 50%;
        }
    }

    &  > *:first-child {
        &:after {
            @include _lib-icon-font(
                $-icon-font-content        : $-message-icon,
                $-icon-font                : $icon-font,
                $-icon-font-size           : $message-icon-font-size,
                $-icon-font-line-height    : $message-icon-font-line-height,
                $-icon-font-color          : $-message-icon-color,
                $-icon-font-margin         : -$message-icon-font-size / 2 0 0,
                $-icon-font-vertical-align : $icon-font-vertical-align
            );
            @include lib-css(bottom, $-message-icon-bottom);
            @include lib-css(left, $-message-icon-left);
            @include lib-css(right, $-message-icon-right);
            @include lib-css(top, $-message-icon-top);
            @include lib-css(width, $message-icon-lateral-width);
            position: absolute;
            text-align: center;
        }
    }

    @include _lib-message-icon-lateral-position(
        $-message-icon-position,
        $-message-icon-background
    );
}

@mixin _lib-message-icon-lateral-position(
    $-message-icon-position,
    $-message-icon-background
) {
    @if $-message-icon-position == right {
        @include lib-css(padding-right, $message-icon-lateral-width + $indent-s);
        &:before {
            right: 0;
            @include _lib-message-icon-lateral-border-radius($-message-icon-position);
        }
        & > *:first-child {
            &:before {
                @include lib-arrow(left, $message-icon-lateral-arrow-size, $-message-icon-background);
                @include lib-css(right, $message-icon-lateral-width);
            }
            &:after {
                right: 0;
                left: initial;
            }
        }
    }
    @else if $-message-icon-position == left {
        @include lib-css(padding-left, $message-icon-lateral-width + $indent-s);

        &:before {
            left: 0;
            @include _lib-message-icon-lateral-border-radius($-message-icon-position);
        }

        & > *:first-child {
            &:before {
                @include lib-arrow(right, $message-icon-lateral-arrow-size, $-message-icon-background);
                @include lib-css(left, $message-icon-lateral-width);
            }
            &:after {
                left: 0;
            }
        }
    }
}

@mixin _lib-message-icon-lateral-border-radius($-message-icon-position) {
    @if $message-border-radius != false and $message-border-width != false {
        @if $-message-icon-position == left {
            @include lib-css(border-radius, ($message-border-radius - $message-border-width) 0 0 ($message-border-radius - $message-border-width));
        }
        @if $-message-icon-position == right {
            @include lib-css(border-radius, 0 ($message-border-radius - $message-border-width) ($message-border-radius - $message-border-width) 0);
        }
    }
}

@mixin _lib-message-icon-inner(
    $-message-icon,
    $-message-icon-color,
    $-message-icon-background,
    $-message-icon-top,
    $-message-icon-left,
    $-message-icon-bottom,
    $-message-icon-right
) {
    @include lib-css(padding-left, $message-icon-inner-padding-left);
    position: relative;

    & > *:first-child:before {
        @include _lib-icon-font(
            $-icon-font-content        : $-message-icon,
            $-icon-font                : $icon-font,
            $-icon-font-size           : $message-icon-font-size,
            $-icon-font-line-height    : $message-icon-font-line-height,
            $-icon-font-color          : $-message-icon-color,
            $-icon-font-margin         : -$message-icon-font-size / 2 0 0,
            $-icon-font-vertical-align : $icon-font-vertical-align
        );
        @include lib-css(bottom, $-message-icon-bottom);
        @include lib-css(left, $-message-icon-left);
        @include lib-css(right, $-message-icon-right);
        @include lib-css(top, $-message-icon-top);
        @include lib-css(width, $message-icon-inner-padding-left);
        position: absolute;
        text-align: center;
    }
}


@mixin _elevate_lib-message-icon-inner(
    $-message-icon,
    $-message-icon-color,
    $-message-icon-background,
) {
    position: relative;

    & > *:first-child:before {
        min-width: $elevate-message-before-minwidth;
        @include _elevate-lib-icon-font(
            $-icon-font-content        : $-message-icon,
            $-icon-font                : $icon-font,
            $-icon-font-size           : $elevate-icon-font-size,
            $-icon-font-color          : $-message-icon-color,
            $-icon-font-margin         : $elevate-message-icon-margin,
        );
    }
}
