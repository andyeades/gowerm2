.hide-was {
    display: none !important;
}

// Inc Vat/etc
.price-wrapper {

    &:before, &:after {
        @include co(font-weight, $pwrap-price-after-label-font-weight);
        @include co(font-size, $pwrap-price-after-label-font-size);
        @include ev-color-output($pwrap-price-after-label-color);
    }
}


.price {
    @include co(font-family, $price-font-family);
     @include co(font-weight, $price-font-weight);
     @include co(font-size, $price-font-size);
    @include co(color, $price-color, $body-color);
}

.price-label {
     @include co(font-weight, $price-label-font-weight);
     @include co(font-size, $price-label-font-size);
    @include co(color, $price-label-color, $body-color);
}

.old-price {
    @include co(order, $old-price-order);

    @if $old-price-text-decoration-labelprice == both {
        @if $old-price-text-decoration != none {
            text-decoration: $old-price-text-decoration;
        }
    }


    .price-label {
        @include co(color, $old-price-label-color, $price-label-color);
        @include co(text-transform, $old-price-label-texttransform);
        @include co(font-weight, $old-price-label-font-weight, $price-label-font-weight);

        @if $old-price-text-decoration-labelprice == label {
            text-decoration: $old-price-text-decoration;
        }
    }

    .price {
        @include co(font-size, $old-price-font-size, $price-font-size);
        @include co(font-weight, $old-price-font-weight, $price-font-weight);

        @if $old-price-text-decoration-labelprice == price {
            text-decoration: $old-price-text-decoration;
        }
    }

    .price-wrapper {
        &:before, &:after {
            @include co(font-weight, $old-price-after-label-font-weight, $pwrap-price-after-label-font-weight);
            @include co(font-size, $old-price-after-label-font-size, $pwrap-price-after-label-font-size);
            @include ev-color-output($old-price-after-label-color);
        }

    }
}

.minimal-price {
    @include co(order, $minimal-price-order);

    @if $minimal-price-text-decoration-labelprice == both {
        @if $minimal-price-text-decoration != none {
            text-decoration: $minimal-price-text-decoration;
        }
    }
    .price-label {
        @include co(color, $minimal-price-label-color, $price-label-color);
        @include co(text-transform, $minimal-price-label-texttransform);
        @include co(font-weight, $minimal-price-label-font-weight, $price-label-font-weight);

        @if $minimal-price-text-decoration-labelprice == label {
            text-decoration: $minimal-price-text-decoration;
        }
    }

    .price {
        @include co(font-size, $minimal-price-font-size, $price-font-size);
        @include co(font-weight, $minimal-price-font-weight, $price-font-weight);

        @if $minimal-price-text-decoration-labelprice == price {
            text-decoration: $minimal-price-text-decoration;
        }
    }

    .price-wrapper {
        &:before, &:after {
            @include co(font-weight, $minimal-price-after-label-font-weight, $pwrap-price-after-label-font-weight);
            @include co(font-size, $minimal-price-after-label-font-size, $pwrap-price-after-label-font-size);
            @include ev-color-output($minimal-price-after-label-color);
        }

    }
}

.product-items {
    .price-box {
        > span {
            @include co(margin, $pitems-pricebox-prices-margin);
            &:last-of-type {
                @include co(margin, $pitems-pricebox-prices-margin-last-of-type);
            }
        }
    }
    .price {
        @include co(letter-spacing,$pitems-prices-letter-spacing);
        @include co(font-size, $pitems-shared-prices-font-size, $price-font-size);

        @include min-screen($desktop-min) {
            @include co(font-size, $pitems-shared-prices-font-size-desktop, $pitems-shared-prices-font-size);
        }
    }


    .normal-price {
        @include co(order, $pitems-normal-price-order);
        .price {
            @include co(font-size, $pitems-normal-price-font-size, $pitems-shared-prices-font-size);
            @include co(font-weight, $pitems-normal-price-font-weight, $normal-price-font-weight);
            @include co(color, $pitems-normal-price-color, $normal-price-color);

        }
    }

    .old-price {
        @include co(order, $pitems-old-price-order, $old-price-order);

        .price {
            @include co(font-size, $pitems-old-price-font-size, $pitems-shared-prices-font-size);
            @include co(font-weight, $pitems-old-price-font-weight, $old-price-font-weight);
            @include co(color, $pitems-old-price-color, $old-price-color);
        }

        .price-container {
            .price-wrapper {
                @include co(opacity, $pitems-old-price-opacity);
            }
        }
    }

    .minimal-price {
        @include co(order, $pitems-minimal-price-order);
    }
}

$xasda: 0;

@if ($xasda == 1) {
    .price-final-price, .special-price {
        .price {
            @if $pitems-special-price-font-size != $special-price-font-size {
                 @include co(font-size, $pitems-special-price-font-size);
            }
            @if $pitems-special-price-font-weight != $special-price-font-weight {
                 @include co(font-weight, $pitems-special-price-font-weight);
            }
            @if $pitems-special-price-color != $special-price-color {
                @include co(color, $pitems-special-price-color);
            }
        }


    }
}


.special-price {
    @include co(color, $special-price-color);
    @include co(order, $special-price-order);
     @include co(font-size, $special-price-font-size);

    @if $special-price-font-weight == $special-price-label-font-weight {
         @include co(font-weight, $special-price-font-weight);
    }

    .price-label,
    .label {
        @include co(text-transform, $special-price-label-capitalisation);
        @if $special-price-label-font-weight != $special-price-font-weight {
             @include co(font-weight, $special-price-label-font-weight);
        }

    }

    .price {
        @if $special-price-font-weight != $special-price-label-font-weight {
             @include co(font-weight, $special-price-font-weight);
        }

    }
}

.main-price, .normal-price {
    @include co(color, $normal-price-color);
    @include co(order, $normal-price-order);
     @include co(font-size, $normal-price-font-size);
    @if $normal-price-font-weight == $normal-price-label-font-weight {
         @include co(font-weight, $normal-price-font-weight);
    }

    .price-label,
    .label {
        @if $normal-price-label-capitalisation == 'uppercase' {
            text-transform: uppercase;
        }
        @if $normal-price-label-font-weight != $normal-price-font-weight {
             @include co(font-weight, $normal-price-label-font-weight);
        }

    }

    .price {
        @if $normal-price-font-weight != $normal-price-label-font-weight {
             @include co(font-weight, $normal-price-font-weight);
        }
    }
}

.was-price {
    @include co(color, $was-price-color);
    @include co(order, $was-price-order);
     @include co(font-size, $was-price-font-size);
    @if $was-price-font-weight == $was-price-label-font-weight {
         @include co(font-weight, $was-price-font-weight);
    }
    @if $was-price-text-decoration-labelprice == both {

        @if $was-price-text-decoration != none {
            text-decoration: $was-price-text-decoration;
        }
    }

    .price-label,
    .label {

        @if $was-price-label-capitalisation == 'uppercase' {
            text-transform: uppercase;
        }
        @if $was-price-label-font-weight != $was-price-font-weight {
             @include co(font-weight, $was-price-label-font-weight);
        }
        @if $was-price-text-decoration-labelprice == label {
            text-decoration: $was-price-text-decoration;
        }

    }

    .price {
        @if $was-price-font-weight != $was-price-label-font-weight {
             @include co(font-weight, $was-price-font-weight);
        }
        @if $was-price-text-decoration-labelprice == price {
            text-decoration: $was-price-text-decoration;
        }
    }
}


$xfaafa: 0;

@if ($xfaafa == 1) {
    .minimal-price {
        > .price-final_price {
            .price-label {

                 @include co(font-weight, $final-price-label-font-weight);
                 @include co(font-size, $final-price-label-font-size);
                @include ev-color-output($final-price-label-color);
            }

            .price-wrapper {
                &:before, &:after {
                     @include co(font-weight, $final-price-after-label-font-weight);
                     @include co(font-size, $final-price-after-label-font-size);
                    @include ev-color-output($final-price-after-label-color);
                }

                > .price {
                     @include co(font-weight, $final-price-font-weight);
                     @include co(font-size, $final-price-font-size);
                    @include ev-color-output($final-price-color);
                }
            }
        }
    }
}
