.hide-was {
    display: none !important;
}

.price-wrapper {
    .price {

    }

    &:before, &:after {
        font-weight: $pwrap_price_after_label_font_weight;
        font-size: $pwrap_price_after_label_font_size;
        @include ev-color-output($pwrap_price_after_label_color);
    }
}


.price {
    @include co(font-family, $price_font_family);
    font-weight: $price_font_weight;
    font-size: $price_font_size;
    @include co(color, $price_color, $body-color);
}

.price-label {
    font-weight: $price_label_font_weight;
    font-size: $price_label_font_size;
    @include co(color, $price_label_color, $body-color);
}

.old-price {
    order: $old_price_order;

    @if $old_price_text_decoration_labelprice == both {
        @if $old_price_text_decoration != none {
            text-decoration: $old_price_text_decoration;
        }
    }


    .price-label {
        @include co(color, $old_price_label_color, $price_label_color);
        @include co(text-transform, $old_price_label_texttransform);
        @include co(font-weight, $old_price_label_font_weight, $price_label_font_weight);

        @if $old_price_text_decoration_labelprice == label {
            text-decoration: $old_price_text_decoration;
        }
    }

    .price {
        @include co(font-size, $old_price_font_size, $price_font_size);
        @include co(font-weight, $old_price_font_weight, $price_font_weight);

        @if $old_price_text_decoration_labelprice == price {
            text-decoration: $old_price_text_decoration;
        }
    }

    .price-wrapper {
        &:before, &:after {
            @include co(font-weight, $old_price_after_label_font_weight, $pwrap_price_after_label_font_weight);
            @include co(font-size, $old_price_after_label_font_size, $pwrap_price_after_label_font_size);
            @include ev-color-output($old_price_after_label_color);
        }

    }
}

.minimal-price {
    order: $minimal_price_order;

    @if $minimal_price_text_decoration_labelprice == both {
        @if $minimal_price_text_decoration != none {
            text-decoration: $minimal_price_text_decoration;
        }
    }
    .price-label {
        @include co(color, $minimal_price_label_color, $price_label_color);
        @include co(text-transform, $minimal_price_label_texttransform);
        @include co(font-weight, $minimal_price_label_font_weight, $price_label_font_weight);

        @if $minimal_price_text_decoration_labelprice == label {
            text-decoration: $minimal_price_text_decoration;
        }
    }

    .price {
        @include co(font-size, $minimal_price_font_size, $price_font_size);
        @include co(font-weight, $minimal_price_font_weight, $price_font_weight);

        @if $minimal_price_text_decoration_labelprice == price {
            text-decoration: $minimal_price_text_decoration;
        }
    }

    .price-wrapper {
        &:before, &:after {
            @include co(font-weight, $minimal_price_after_label_font_weight, $pwrap_price_after_label_font_weight);
            @include co(font-size, $minimal_price_after_label_font_size, $pwrap_price_after_label_font_size);
            @include ev-color-output($minimal_price_after_label_color);
        }

    }
}

.product-items {
    .price-box {
        > span {
            margin: $pitems_pricebox_prices_margin;
            &:last-of-type {
                margin: $pitems_pricebox_prices_margin_last_of_type;
            }
        }
    }
    .price {
        @if $pitems-prices-letter-spacing != 0 {
            letter-spacing: $pitems-prices-letter-spacing;
        }

        @include co(font-size, $pitems_shared_prices_font_size, $price_font_size);

        @include min-screen($desktop-min) {
            @include co(font-size, $pitems_shared_prices_font_size_desktop, $pitems_shared_prices_font_size);
        }
    }


    .normal-price {
        order: $pitems_normal_price_order;

        .price {
            @include co(font-size, $pitems-normal-price-font-size, $pitems_shared_prices_font_size);
            @include co(font-weight, $pitems-normal-price-font-weight, $normal-price-font-weight);
            @include co(color, $pitems-normal_price_color, $normal_price_color);

        }
    }

    .old-price {
        @include co(order, $pitems_old_price_order, $old_price_order);

        .price {
            @include co(font-size, $pitems-old-price-font-size, $pitems_shared_prices_font_size);
            @include co(font-weight, $pitems-old-price-font-weight, $old-price-font-weight);
            @include co(color, $pitems-old-price-color, $old-price-color);
        }

        .price-container {
            .price-wrapper {
                @include co(opacity, $pitems_old_price_opacity);
            }
        }
    }

    .minimal-price {
        order: $pitems_minimal_price_order;
    }
}

$xasda: 0;

@if ($xasda == 1) {
    .price-final_price, .special-price {
        .price {
            @if $pitems-special-price-font-size != $special-price-font-size {
                font-size: $pitems-special-price-font-size;
            }
            @if $pitems-special-price-font-weight != $special-price-font-weight {
                font-weight: $pitems-special-price-font-weight;
            }
            @if $pitems-special-price-color != $special-price-color {
                color: $pitems-special-price-color;
            }
        }


    }
}


.special-price {
    color: $special_price_color;
    order: $special_price_order;
    font-size: $special-price-font-size;
    @if $special_price_font_weight == $special_price_label_font_weight {
        font-weight: $special_price_font_weight;
    }

    .price-label,
    .label {
        @if $special_price_label_capitalisation == 'uppercase' {
            text-transform: uppercase;
        }
        @if $special_price_label_font_weight != $special_price_font_weight {
            font-weight: $special_price_label_font_weight;
        }

    }

    .price {
        @if $special_price_font_weight != $special_price_label_font_weight {
            font-weight: $special_price_font_weight;
        }

    }
}

.main-price, .normal-price {
    color: $normal_price_color;
    order: $normal_price_order;
    font-size: $normal_price_font_size;
    @if $normal_price_font_weight == $normal_price_label_font_weight {
        font-weight: $normal_price_font_weight;
    }

    .price-label,
    .label {
        @if $normal_price_label_capitalisation == 'uppercase' {
            text-transform: uppercase;
        }
        @if $normal_price_label_font_weight != $normal_price_font_weight {
            font-weight: $normal_price_label_font_weight;
        }

    }

    .price {
        @if $normal_price_font_weight != $normal_price_label_font_weight {
            font-weight: $normal_price_font_weight;
        }
    }
}

.was-price {
    color: $was_price_color;
    order: $was_price_order;
    font-size: $was_price-font-size;
    @if $was_price_font_weight == $was_price_label_font_weight {
        font-weight: $was_price_font_weight;
    }
    @if $was_price_text_decoration_labelprice == both {

        @if $was_price_text_decoration != none {
            text-decoration: $was_price_text_decoration;
        }
    }

    .price-label,
    .label {

        @if $was_price_label_capitalisation == 'uppercase' {
            text-transform: uppercase;
        }
        @if $was_price_label_font_weight != $was_price_font_weight {
            font-weight: $was_price_label_font_weight;
        }
        @if $was_price_text_decoration_labelprice == label {
            text-decoration: $was_price_text_decoration;
        }

    }

    .price {
        @if $was_price_font_weight != $was_price_label_font_weight {
            font-weight: $was_price_font_weight;
        }
        @if $was_price_text_decoration_labelprice == price {
            text-decoration: $was_price_text_decoration;
        }
    }
}


$xfaafa: 0;

@if ($xfaafa == 1) {
    .minimal-price {
        > .price-final_price {
            .price-label {

                font-weight: $final_price_label_font_weight;
                font-size: $final_price_label_font_size;
                @include ev-color-output($final_price_label_color);
            }

            .price-wrapper {
                &:before, &:after {
                    font-weight: $final_price_after_label_font_weight;
                    font-size: $final_price_after_label_font_size;
                    @include ev-color-output($final_price_after_label_color);
                }

                > .price {
                    font-weight: $final_price_font_weight;
                    font-size: $final_price_font_size;
                    @include ev-color-output($final_price_color);
                }
            }
        }
    }
}
