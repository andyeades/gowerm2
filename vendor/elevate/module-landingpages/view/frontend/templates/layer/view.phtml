<style>
.ev_ln_item .filter_rating {

    display: flex;
    align-items: center;
}
</style>
<?php

$custom_page_title = false;
$enable_full_product_range = false;

$url = $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'];

/** @var \Elevate\LandingPages\Helper\Data $landingpages_helper */
$landingpages_helper = $this->helper('Elevate\LandingPages\Helper\Data');

/** @var \Elevate\Promotions\Helper\Data $promotions_helper */
$promotions_helper = $this->helper('Elevate\Promotions\Helper\Data');

$show_more_number = $landingpages_helper->getShowMoreNumber();

if (!is_numeric($show_more_number)) {
    $show_more_number = 6;
} else {
    $show_more_number = $show_more_number - 1;
}

// Filter Open/Close

// chevrons-updown
// plusminus

$filter_openclose = $landingpages_helper->getFilterOpenCloseIconType();

if (strcmp($filter_openclose, 'plusminus') == 0) {
    $filter_openclose_close = '<span class="evlp-filter-openclose"><i class="fa fa-minus"></i></span>';
} else {
    // Chevrons-updown default
    $filter_openclose_close = '<span class="evlp-filter-openclose"><i class="evlp-filter-chevron-down"></i></span>';
}


/** @var $block \Magento\LayeredNavigation\Block\Navigation */

$menuDirection = 'vertical';

?>
<style>

    .expand span, .expand {
        text-align:      right;
        display:         block;
        text-decoration: underline;
        cursor:          pointer;
    }



    @media only screen and (max-width: 991.98px) {


        .page-products .columns {
            position: initial;
        }


        .catalog-category-view .page-title {

            text-align: center;
        }

    }

    #firmness_rating_bottom a {
        color: white !important;
    }

    #firmness_rating_bottom .ev_ln_items {
        margin-top: 13px;
    }

    #bwhowmany label.btn.btn-continue {
        text-align: center;
        display:    block;
    }

    .show-weight-in {
        text-align: center;
    }


    .ev_ln_items i.fa.fa-chevron-right {
        margin-right: 10px;
    }

    .fa-star:before {
        text-shadow: 0 0 1px #000;
        color:       #fff;
        font-size:   20px;
    }

    .fa-star.starchecked:before {
        color: #ffc200 !important;
    }

    .colfilterimage {
        border: 2px solid #ccc;
    }

    .pinkborder {
        border: 2px solid #f0386c !important;
    }

<?php if ($menuDirection == 'horizontal') { ?>

        .sidebar.sidebar-main {
            width: 100%;
        }

        @media only screen and (min-width: 992px) {
            .page-layout-2columns-left.page-with-filter .columns .single-sidebar {
                width: 100%;
            }

            .page-layout-2columns-left.page-with-filter .columns .column.main {
                width:   100%;
                padding: 0 0 0 15px;
            }
        }

        .ev_ln_filter {
            margin-bottom: 20px;
            display:       flex;
        }


        .ev_ln_filter_title {
            display: none !important;
        }

        /*Make chevron smaller*/
        .ev_ln_filter .ac-accordion__expand-chevron {
            width: 10px;
        }

        .ev_ln_filter-options-content {
            width: auto;
            padding: 0;
        }

        dl#narrow-by-list {
            display:         flex;
            align-items:     center;
            position:        relative;
            justify-content: center;
        }

        dd.ev_ln_filter-options-content {
            margin-bottom:    0px;
            padding-bottom:   15px;
            position:         absolute;
            background-color: #f0f0f0;
            width:            96%;
            left:             0;
            top:              42px;
            padding:          2%;
        }

        dt.ev_ln_filter_options_title {
            border-top:     1px solid #e4e4e4;
            padding-top:    15px;
            padding-bottom: 15px;
            letter-spacing: .5px;
            display:        flex;
            margin-bottom:  0px;
            margin:         0px;
            cursor:         pointer;
            align-items:    center;
            flex:           1 1 auto;
            padding:        10px 10px;
        }

        ol.ev_ln_items {
            list-style:     none;
            padding:        0;
            margin-top:     0px;
            margin-bottom:  0px;
            width:          700px;
            margin:         0 auto;
            display:        flex;
            flex-direction: row;
            flex-wrap:      wrap;
        }

        li.ev_ln_item {
            position:      relative;
            flex:          0 1 auto;
            width:         calc(50% - 15px);
            border:        2px solid #ccc;
            box-sizing:    border-box;
            padding:       14px;
            margin:        7.5px 7.5px;
            border-radius: 6px;
        }
<?php }

$subtitle = 'Shopping Options'; ?>


    @media only screen and (max-width: 767.98px) {
        .toolbar-products .toolbar-amount {
            display: block;
        }

        .toolbar-products .toolbar-amount {
            display:       block;
            width:         100%;
            order:         6;
            margin-top:    17px;
            margin-bottom: 0px;
            margin-left:   0;
            height:        23px;
        }
    }


    .firmness-rating-outer {
        position: relative;
    }

    .firmness_not_suited {
        position:         absolute;
        background-color: #ffffffd6;
        color:            #000000;
        width:            100%;
        top:              0;
        font-size:        13px;
        text-align:       center;
        margin:           0 0 0 -15px;
        height:           100%;
        font-weight:      700;
        padding:          0 5px;
        z-index:          99;
        align-items:      center;
        display:          flex;
        justify-content:  center;
    }

    .firm_hidden {
        display: none;
    }

    .bwselwrap2.hide_filter {
        display: none;
    }

    .bwselwrap2.hide_filter.flex {
        display: flex !important;
    }

    #bwhowmany label.btn.btn-continue {
        background-color: #0e1936;
        border-color:     #091022;
        width:            100% !important;
    }

    .ev_ln_filter .filter-panel__apply {
        z-index:          4;
        padding:          14px 15px;
        bottom:           0;
        background-color: #fff;
        max-width:        280px;
        display:          block;
        position:         sticky;
    }

    .ev_ln_filter span.ev_ln_filter-label {
        text-align: left !important;
    }

    @media only screen and (min-width: 992px) {
        .ev_ln_filter .filter-panel__apply {
            display: none !important;
        }
    }


    <?php
    $url = $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'];


   ?>
</style>
<?php

if (!$custom_page_title) {
    $custom_page_title = __('Filter By');
}

if ($block->canShowBlock()): ?>
    <div class="ev_ln_filter">
        <div class="ev_ln_filter_title">
            <strong><?= /* @escapeNotVerified */$custom_page_title ?></strong>
            <?php if ($block->getLayer()->getState()->getFilters()) { ?>
                <a href="<?= /* @escapeNotVerified */$block->getClearUrl() ?>" class="ev_ln_filter_actions">
                    <span><?= /* @escapeNotVerified */__('Clear All') ?></span>
                </a>
            <?php } ?>
            <div type="button" class="ev_ln_filter_close" data-el="filter-panel-close">
                <span class="sr-only">close filter</span><span style="fill: currentcolor;"><svg width="1em" height="1em" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 64 512 512" class="icon"><path transform="scale(1, -1) translate(0, -512)" glyph-name="uniF1ED" unicode="ï‡­" d="M285 192l222 225q6 6 5 13.5t-8 13t-16.5 4.5t-15.5 -7l-216 -219l-216 219q-6 6 -15.5 7t-16.5 -4.5t-8 -13t5 -13.5l222 -225l-222 -225q-6 -6 -5 -13.5t8 -13.5q6 -4 14 -4q11 0 18 7l216 219l216 -219q7 -7 18 -7q8 0 14 4q7 6 8 13.5t-5 13.5l-222 225v0z"></path></svg></span>
            </div>
        </div>
        <div class="ev_ln_filter-content">

            <?= $block->getChildHtml('state') ?>


            <?php $wrapOptions = false;
            $filt_in = '';
            $filt_ex = '';
            $category = $block->getCurrentCategory();
            if ($category) {
                $filt_in = $category->getData('ev_landingpages_include_filters');
                $filt_ex = $category->getData('ev_landingpages_exclude_filters');
                if ($category->getId() == '33') {
                    $filt_in = 'filter_rating,bunk_bed_type,bed_material_2,storage_bed_type,choose_size,colour_filter,base_type,ladder_position,splits_into_two,matching_furniture';
                }
                if ($category->getId() == '66') {
                    $filt_in = 'choose_size,bed_material_2,kids_bed_type,bunk_bed_type,storage_bed_type,colour_filter,base_type,ladder_position,desk_position,play_tent,splits_into_two,matching_furniture,filter_rating';
                }
                if ($category->getId() == '47') {
                    $filt_in = 'choose_size,bed_material_2,kids_bed_type,storage_bed_type,intergrated_tech,colour_filter,base_type,desk_position,ottoman_entry,filter_rating,bed_shape';
                }
                if ($category->getId() == '34') {
                    $filt_in = 'choose_size,bed_material_2,storage_bed_type,bed_shape,colour_filter,base_type,splits_into_two,matching_furniture,filter_rating';
                }
                if ($category->getId() == '36') {
                    $filt_in = 'choose_size,bed_material_2,storage_bed_type,bed_shape,colour_filter,base_type,splits_into_two,matching_furniture,filter_rating';
                }
                if ($category->getId() == '83') {
                    $filt_in = 'choose_size,bed_material_2,storage_bed_type,bed_shape,intergrated_tech,colour_filter,base_type,ottoman_entry,filter_rating';
                }
                if ($category->getId() == '28') {
                    $filt_in = 'choose_size,bed_material_2,storage_bed_type,bed_shape,intergrated_tech,colour_filter,base_type,splits_into_two,ottoman_entry,filter_rating';
                }
                if ($category->getId() == '81') {
                    $filt_in = 'choose_size,bed_material_2,colour_filter,base_type,,filter_rating,matching_furniture,storage_bed_type';
                }
                if ($category->getId() == '89') {
                    $filt_in = 'choose_size,bed_material_2,kids_bed_type,colour_filter,base_type,filter_rating';
                }
                if ($category->getId() == '154') {
                    $filt_in = 'choose_size,bed_material_2,kids_bed_type,colour_filter,base_type,filter_rating';
                }
                if ($category->getId() == '8') {
                    $filt_in = 'wardrobe_type,chest_of_drawers_type,number_of_drawers,number_of_doors,bed_material_2,colour_filter,filter_rating';
                }
                if ($category->getId() == '43') {
                    $filt_in = 'bed_material_2,colour_filter';
                }
                if ($category->getId() == '35') {
                    $filt_in = 'bed_material_2,colour_filter,filter_rating,sofa_size,seat_number,sofa_mechanism,storage_bed_type';
                }
                if ($category->getId() == '39') {
                    $filt_in = 'colour_filter,filter_rating';
                }
                if ($category->getId() == '101') {
                    $filt_in = 'choose_size,colour_filter,filter_rating';
                }
                if ($category->getId() == '22') {
                    $filt_in = 'filter_rating,choose_size';
                }
                if ($category->getId() == '180') {
                    $filt_in = 'choose_size,colour_filter,filter_rating';
                }
                if ($category->getId() == '191') {
                    $filt_in = 'choose_size,filter_rating,price';
                }
                if ($category->getId() == '195') {
                    $filt_in = 'choose_size,filter_rating,price';
                }
                if ($category->getId() == '5') {
                    $filt_ex = 'bed_type_hmc,colour_filter,color,divan_size,divan_storage';
                }
                if ($category->getId() == '41') {
                    $filt_ex = 'structure';
                }
                if ($category->getId() == '49') {
                    $filt_ex = 'structure';
                }
                if ($category->getId() == '11') {
                    $filt_ex = 'primary_filling_2,additional_filling_2';
                }
                if ($category->getId() == '58') {
                    $filt_ex = 'primary_filling_2';
                }
                if ($category->getId() == '63') {
                    $filt_ex = 'additional_filling_2';
                }
                if ($category->getId() == '7') {
                    $filt_ex = 'choose_mattress_filter,number_of_seats,sofa_size,sofa_mechanism,divan_size,divan_storage';
                }
                if ($category->getId() == '36') {
                    $filt_ex = 'choose_mattress_filter';
                }
                if ($category->getId() == '8') {
                    $filt_ex = 'Kids_Beds_Type,Bunk_Bed_type,Choose_Size,Bed_Shape,Storage_Bed_type,ottoman_entry,Ladder_Position,Desk_position,Splits_Into_two';
                }

                $is_landing_page = $block->isLandingPage(); /*edit*/
                if ($is_landing_page) {
                    $landingPage = $block->getLandingPageData();
                    $filt_in = $landingPage['include_filters'];
                    $filt_ex = $landingPage['exclude_filters'];
                }
            }
            $accordian_count = 0;
            $title_show_once_data = '';
            $title_show_once = true;
            $show_filter = true; ?>
            <?php foreach ($block->getFilters() as $filter): ?>
            <?php if (strtolower(__($filter->getName())) != 'category') {
                $insert_category = trim(ucwords($filter->getLayer()->getCurrentCategory()->getName()));
                if ($insert_category == 'The Best Beds') {
                    $insert_category = 'Beds';
                }
                $first_class = '';
                if ($show_filter) {
                    $is_landing_page = $block->isLandingPage(); /*edit*/
                    if ($is_landing_page) {
                        $landingPage = $block->getLandingPageData();
                        if (isset($landingPage['page_title'])) {
                            $insert_category = $landingPage['page_title'];
                        }
                    }
                    if (strtolower($insert_category) == 'default category') {
                        $insert_category = '';
                    }
                    $first_class = 'first_refine';
                    $title_show_once_data = '<div class="evlp-r-ct">Refine ' . $insert_category . ' By</div> ';
                    $show_filter = false;
                }
            }
        if (!$wrapOptions): ?>
            <strong role="heading" aria-level="2" class="ev_ln_filter-subtitle"><?= /* @escapeNotVerified */__($subtitle) ?></strong>

            <dl class="ev_ln_filter_options" id="narrow-by-list">
                <?php
                $wrapOptions = true;
                endif; ?>

                <?php if ($filter->getItemsCount()) {
                    if (strtolower(__($filter->getName())) == 'price') {
                        continue;
                    }

                    if (strtolower(__($filter->getName())) == 'category') {
                        $bob = $filter->getChildrenCount();
                        $category_check = $filter->getLayer()->getCurrentCategory()->getId();
                        if ($category_check == 6) {
                            continue;
                        }
                    }
                    $filt_att_code = ($filter->getRequestVar() != 'cat') ? $filter->getAttributeModel()->getAttributeCode() : $filter->getRequestVar();

                    if ($filt_att_code) {
                        if (!empty($filt_in)) {
                            $filt_in_exp = explode(',', $filt_in);
                            $filt_in_exp = array_flip($filt_in_exp);
                            $break_out = false;
                            if (!array_key_exists($filt_att_code, $filt_in_exp)) {
                                if ($filter->getRequestVar() != 'cat') {
                                    continue;
                                }
                            }
                        }
                        $filt_ex_exp = '';
                        
                        if($category){
                          if ($category->getId() == '7') {
                    $filt_ex = 'choose_mattress_filter,number_of_seats,sofa_size,sofa_mechanism,divan_size,divan_storage';
                }
                }
                        
                        $filt_ex_exp = explode(',', $filt_ex);
                        $break_out = false;
                        foreach ($filt_ex_exp as $key => $val) {
                            if (trim($val) == $filt_att_code) {
                                $break_out = true;

                                continue;
                            }
                        }
                        if ($break_out) {
                            continue;
                        }
                    }

                    if ($title_show_once) {
                        if (strtolower(__($filter->getName())) != 'category') {
                            echo $title_show_once_data;
                            $title_show_once = false;
                        }
                    }

                    $filter_name_lower = strtolower($filter->getName());
                    if ($filter_name_lower == 'firmness value') {
                        $filterOutputFirm = '<dt role="heading" aria-level="3" class="ev_ln_filter_options_title">Mattress Firmness '.$filter_openclose_close.'</dt>';
                        $filterOutputFirm .= '<dd class="firmness_wrap ev_ln_filter-options-content ev_accordian_open">';
                        $filterOutputFirm .= '<div id="bodyweight_filter">';
                        $filterOutputFirm .= '<div id="inject_firmness"></div>';
                        $filterOutputFirm .= '<div id="firmness_rating_bottom">' . $block->getChildBlock('renderer')->render($filter) . '</div></div></dd>';

                        $filterOutputFirm .= '</dd></div>';
                        echo $filterOutputFirm; ?>

                        <script type="text/javascript" data-po-cmp-ignore>


                            var tS = new Date().getTime();
                            var has_run = false;
                            jQuery.ajax({
                                url: '/ev_firmness/index/getbodyweightselects?t=' + tS,
                                dataType: 'json',
                                type: 'get',
                                cache: 'false',
                                success: function (data) {
                                    jQuery('#inject_firmness').html(data.html);
                                    var checkContents = setInterval(function () {
                                        if (jQuery("#inject_firmness").length > 0 && !has_run) { // Check if element has been found
                                            // There is a <p> element in here!!
                                            //jQuery('#inject_firmness').html(data.html);
                                            has_run = true;
                                        }
                                    }, 1000);


                                }
                            });
                        </script><?php
                    } else {
                        $is_category = false;
                        if ($filter_name_lower == 'category') {
                            $is_category = true;
                        }
                        $accordian_count++;
                        $default_accordian_state = 'ev_accordian_open';
                        if ($menuDirection == 'horizontal' || $accordian_count > 9) {
                            $default_accordian_state = 'ev_accordian_closed';
                        }

                        $filter_name = $block->escapeHtml(__($filter->getName()));
                        if ($filter_name == 'filter_rating') {
                            $filter_name = 'Customer Rating';
                        } ?>
                        <dt role="heading" aria-level="3" class="ev_ln_filter_options_title"><?= $filter_name; ?>
                            <?= $filter_openclose_close; ?>
                        </dt>
                        <dd class="ev_ln_filter-options-content <?= $default_accordian_state; ?>"><?= /* @escapeNotVerified */
                    $block->getChildBlock('renderer')->render($filter) ?></dd><?php
                    } ?><?php
                } ?> <?php endforeach; ?> <?php if ($wrapOptions): ?>
            </dl><?php endif; ?>
            <div class="filter-panel__apply">
                <button class="button button--full" data-el="filter-panel__apply">View products</button>
            </div>
        </div>
    </div>
    <div class="ev_ln_overlay"></div><?php endif; ?>












<script>

    jQuery('ol.make_showmore').each(function () {
        var ul = jQuery(this),
            lis = ul.find('li:gt(<?= $show_more_number; ?>)'),
            isExpanded = ul.hasClass('expanded');
        lis[isExpanded ? 'show' : 'hide']();

        if (lis.length > 0) {
            ul
                .append(jQuery('<li class="expand" style="text-align:right:text-decoration:underline;"><span>' + (isExpanded ? 'Show less' : 'Show more') + '</span></li>')
                    .click(function (event) {
                        var isExpanded = ul.hasClass('expanded');
                        event.preventDefault();
                        jQuery(this).text(isExpanded ? 'Show more' : 'Show less');
                        ul.toggleClass('expanded');
                        lis.toggle();
                    }));
        }
    });
    (function ($) {

        var MqL = 768;
        var menu_type = false;

        function ev_checkWindowWidth() {

            var e = window;
            var a = "inner";
            if (!('innerWidth' in window)) {
                a = "client";
                e = document.documentElement || document.body;
            }

            var width = e[a + 'Width'];
            if (width >= MqL) {
                return true;
            } else {

                return false;
            }
        }

        function landingPagesResize() {


            var allPanels = $('.ev_ln_filter-options-content');
            var desktop = ev_checkWindowWidth();


            if (desktop && (menu_type != 1 || !menu_type)) {

                allPanels.show();
                allPanels.removeClass('ev_accordian_closed').addClass('ev_accordian_open');
                menu_type = 1;
            } else if (!desktop && (menu_type != 2 || !menu_type)) {
                allPanels.hide();
                allPanels.removeClass('ev_accordian_open').addClass('ev_accordian_closed');
                menu_type = 2;

            }
        }

        landingPagesResize();

        jQuery(window).on('resize', function () {
            (!window.requestAnimationFrame) ? setTimeout(landingPagesResize, 10) : window.requestAnimationFrame(landingPagesResize);
        });


        $('.ev_ln_filter_options_title').on('click', function (e) {

            var panelToggle = $(this).next('.ev_ln_filter-options-content');
            var allPanels = $('.ev_ln_filter-options-content').not(panelToggle);

            var horizontal = false;
            e.preventDefault();
            <?php if ($menuDirection == 'horizontal') { ?>

            horizontal = true;
            allPanels.hide();
            allPanels.removeClass('ev_accordian_open').addClass('ev_accordian_closed');


            <?php  } ?> if (panelToggle.hasClass('ev_accordian_open')) {
                if (horizontal) {
                    panelToggle.hide();
                } else {
                    panelToggle.slideUp();
                }

                panelToggle.removeClass('ev_accordian_open');
                panelToggle.addClass('ev_accordian_closed');
                $(this).find('.evlp-filter-openclose').addClass('evlp-filter-openclose-closed');

                if ( $(this).find('.evlp-filter-openclose i').hasClass('fa-minus')) {
                    $(this).find('.evlp-filter-openclose i').addClass('fa-plus').removeClass('fa-minus');
                }

            } else {
                if (horizontal) {
                    panelToggle.show();
                } else {
                    panelToggle.slideDown();
                }
                if ( $(this).find('.evlp-filter-openclose i').hasClass('fa-plus')) {
                    $(this).find('.evlp-filter-openclose i').addClass('fa-minus').removeClass('fa-plus');
                }

                panelToggle.removeClass('ev_accordian_closed');
                panelToggle.addClass('ev_accordian_open');
                $(this).find('.evlp-filter-openclose').removeClass('evlp-filter-openclose-closed');
            }


            return false;
        });


    })(jQuery);</script><?php ?> <?php $current_url = $_SERVER['REQUEST_URI']; ?>
<script type="text/javascript">jQuery(window).bind("pageshow", function (event) {
        if (event.originalEvent.persisted) {
            window.location.reload()
        }
    });
    <?php  ?>


    function ep_createCookie(name, value, days) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + value + expires + "; path=/";
    }

    function ep_readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    function ep_eraseCookie(name) {
        createCookie(name, "", -1);
    }</script>
