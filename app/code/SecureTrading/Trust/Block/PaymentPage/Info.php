<?php
/**
 * Copyright Â© 2016 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

namespace SecureTrading\Trust\Block\PaymentPage;

use Magento\Framework\Phrase;
use Magento\Payment\Block\ConfigurableInfo;

class Info extends ConfigurableInfo
{
	/**
	 * Returns label
	 *
	 * @param string $field
	 * @return Phrase
	 */
	protected function getLabel($field)
	{
		switch ($field) {
			case 'errorcode':
				return __("Error Code");
			case 'orderreference':
				return __("Order Reference");
			case 'paymenttypedescription':
				return __("Payment Type Description");
			case 'requestreference':
				return __("Request Reference");
			case 'settlestatus':
				return __("Settle Status");
			case 'sitereference':
				return __("Site Reference");
			case 'transactionreference':
				return __("Transaction Reference");
			case 'notificationreference':
				return __("Notification Reference");
			case 'accounttypedescription':
				return __("Account Type Description");
			case 'enrolled':
				return __("3D Enrolled");
			case 'status':
				return __("3D Status");
			case 'maskedpan':
				return __("Card Digits");
			case 'authcode':
				return __("Auth Code");
			case 'securityresponsepostcode':
				return __("Security Response Postcode");
			case 'securityresponseaddress':
				return __("Security Response Address");
			case 'securityresponsesecuritycode':
				return __("Security Response Security Code");
			default:
				return __($field);
		}
	}

	/**
	 * Returns value view
	 *
	 * @param string $field
	 * @param string $value
	 * @return string | Phrase
	 */
	protected function getValueView($field, $value)
	{
		return (string)parent::getValueView($field, $value); // TODO: Change the autogenerated stub
	}

	public function getValueAsArray($value, $escapeHtml = false)
	{
		if (empty($value) && $value !== "0") {
			return [];
		}
		if (!is_array($value)) {
			$value = [$value];
		}
		if ($escapeHtml) {
			foreach ($value as $_key => $_val) {
				$value[$_key] = $this->escapeHtml($_val);
			}
		}
		return $value;
	}
}